static piover180 = PI/180;

static picked = -1;
static pickedR=0;
static pickedG=0;
static pickedB=0;

static pickQuad = -1;

static objcolor[10*10][3];
()
{
   static tex[2][2];
   if(numframes==0) tex[0][0] = rgb(255,255,255);
   t=glsettex(tex,1,1);
   
   
   setcam(5,-10,-7,0,25*PIOVER180);
   cls(0); clz(1e32);
   glenable(GL_DEPTH_TEST);
   glcullface(GL_NONE);
   //glcullface(GL_BACK);
   
   num = 0;
   setcol(255,255,255);
   
   for(i=0; i<10; i++)
   for(j=0; j<10; j++)
   {
      r=0; g=0; b=0;
      hsv_to_rgb(360*num/(10*10), .7,1,r,g,b);
      r = (r*255);
      g = (g*255);
      b = (b*255);
  
      if(pickQuad == num){
         setcol(255,255,255); drawsph(i+.5,-.5,j+.25,.25);
      }

      objcolor[num][0] = r/259;
      objcolor[num][1] = g/259;
      objcolor[num][2] = b/259;
      setcol( rgb(r,g,b) );
      
      glbegin(gl_quads);
      {
         gltexcoord(0,0); glvertex(i,0,j);
         gltexcoord(1,0); glvertex(i+1,0,j);
         gltexcoord(1,1); glvertex(i+1,0,j+1);
         gltexcoord(0,1); glvertex(i,0,j+1);
      }
      
      num++;
   }
   glremovetex(t);
   
   getpix(mousx,mousy,r,g,b);
   setcol(r,g,b);
   drawsph(15,15,10);
   {
      pickedR = r/255;
      pickedB = g/255;
      pickedG = b/255;
   }
   
   num=0;
   
   for(i=0; i<10; i++)
   for(j=0; j<10; j++){
   
      if( fabs(objcolor[num][0]-pickedR) < 0.01 &&
      fabs(objcolor[num][1]-pickedG) < 0.01 &&
      fabs(objcolor[num][2]-pickedB) < 0.01) 
      {
         pickQuad = 10*10-num; //hvorfor er tallet flippet?
         break;
      }
      num++;

   }
   
   setcol(0xffffff);
   printf("\npr = %g",pickedR);
   printf("\npg = %g",pickedG);
   printf("\npb = %g",pickedB);
   
   printf("\ncr = %g",objcolor[i][0]);
   printf("\ncg = %g",objcolor[i][1]);
   printf("\ncb = %g",objcolor[i][2]);
   
   printf("\npickQuad = %g",pickQuad);
}

hsv_to_rgb(h,s,v,&r,&g,&b){ 
   if( v == 0 ){r=0; g=0; b=0;} //no brightness(value) means black
   else if( s==0 ){r=v; g=v; b=v;} //grayscale, no colour saturation
   else
   {
      hf = h / 60.0;
      i  = floor( hf );
      f  = hf - i;
      pv  = v * ( 1 - s );
      qv  = v * ( 1 - s * f );
      tv  = v * ( 1 - s * ( 1 - f ) );
      if(i==0){r=v; g=tv; b=pv;} 
      if(i==1){r=qv; g=v; b=pv;} 
      if(i==2){r=pv; g=v; b=tv;} 
      if(i==3){r=pv; g=qv; b=v;} 
      if(i==4){r=tv; g=pv; b=v;} 
      if(i==5){r=v; g=pv; b=qv;}
      if(i==6){r=v; g=tv; b=pv;}
      if(i==-1){r=v; g=tv; b=qv;}    
   } 
}