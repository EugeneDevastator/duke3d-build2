enum{MAXPTS = 10}
static ptx[MAXPTS];
static pty[MAXPTS];
static numpts;

static last;
static first;
()
{
   if(numframes==0)
   {
    ptx[0] = xres/100 * 10;
    pty[0] = yres/100 * 10;
    
    ptx[1] = xres/100 * 30;
    pty[1] = yres/100 * 10;
    
    ptx[2] = xres/100 * 10;
    pty[2] = yres/100 * 30;
    
    ptx[3] = xres/100 * 40;
    pty[3] = yres/100 * 30;
    
    ptx[4] = xres/100 * 60;
    pty[4] = yres/100 * 20;
    
    ptx[5] = xres/100 * 70;
    pty[5] = yres/100 * 20;
    
    ptx[6] = xres/100 * 70;
    pty[6] = yres/100 * 70;
    
    ptx[7] = xres/100 * 30;
    pty[7] = yres/100 * 30;
    numpts=8;
    
    first = 0;
    last = numpts-1;
   } 
  
   cls(255,255,255);
   
   mindist = 1e32;
   minIdx = -1;
   for(i=0; i<numpts; i++)
   {
      setcol(128,128,128);
      drawsph(ptx[i], pty[i],-2);
      dist = sqrt( (mousx-ptx[i])^2 +  (mousy-pty[i])^2);
      if(dist < mindist )
      {
         mindist = dist;
         minIdx = i;
      }
   }
   if(bstatus==1)
   {
      ptx[minIdx] = mousx;
      pty[minIdx] = mousy;
   }
   
   
   moveto(ptx[0],pty[0]);
   for(i=0; i<numpts; i++)
   {
      lineto( ptx[i], pty[i] );
   }
   
   // Goto first point. So. eval for t=0
   x1 = ptx[0]; 
   y1 = pty[0]; 
   t = 0.1;
   //BezEvalSlow(t,x1,y1);
   
   moveto(x1,y1);
   
   rez = 100;
   for(i=1; i<rez-1; i++)
   {
      t = i*1.0/(rez-1);
      x = 0; y =0;
      BezEvalSlow(t,x,y);
      
      setcol( 255, 0, 0 );
      //drawsph(x,y,-3);
      lineto(x,y);
   }
   x1 = ptx[numpts-1]; 
   y1 = pty[numpts-1]; 
   lineto(x1,y1);
}

bernstein(n,i,u)
{
  num = fact(n);
  den = fact(i)*fact(n-i);
  binom = num / den;
  y = binom * u^i * (1-u)^(n-i);
}

BezEvalSlow(t,&x, &y)
{
   x=0; y=0;
   for(i=0; i<numpts; i++)
   {
      weight = bernstein(numpts-1,i,t);
      x += weight*ptx[i];
      y += weight*pty[i];
   }
   return;
}
