static num = 0;

struct point
{
   x,y,z;
};

enum{MAX_PTS = 10}
static point Pts[MAX_PTS];
static numPts = 0;

()
{
   readX = 0;
   readY = 0;
   numPts = 0;
   
   cls(0);
   
   i=0;
   x=0; y=0;
   for(i=0; i<getfilsiz("triangle.txt"); i++)
   {
      
      c = fil("triangle.txt",i);
      if (c != 13) 
      if( c != '\n' ) 
      if( c != ';') 
      {
         moveto(x*8,y*10);
     
         //printchar(c);
         
         readSuccess = 0;
         myNum = readNum(i, readSuccess);
         
         space = 0;
         if( readX ) space = 15;
         
         moveto(xres/2  + x*25 + space, yres/2 + y*10);
         printf("%g", myNum);
         
         if( readSuccess )
         {
            storedNum = 0;
            if( readX && !readY )
            {
               pts[numPts].y = myNum;
               storedNum = 1;
               readX = 0;
               readY = 1;
               numPts++;
            }         
            if( !readX && !storedNum )
            {
               pts[numPts].x = myNum;
               readX = 1;
               readY = 0;
            }
         }
 

      }
      

      x++;   
   
      if(c == ';'){
         x = 0;
         y++;
      }
      
      if (c == '\n') {
         x = 0;
         y++;
      }
      
   }
   
   for(i=0; i<numPts; i++)
   {
      drawsph( pts[i].x, pts[i].y , -10 );
      moveto( pts[i].x, pts[i].y  );
      printf("%g %g", pts[i].x, pts[i].y);
   }

}

readNum(&i, &readSuccess)
{
   charsRead = 0;
   static numBuf[10];
   isNegative = 0;

   
   c = fil("triangle.txt",i);
   while( c != 13 && c != '\n' && c != ' ' && c != ';' && i < getfilsiz("triangle.txt") )
   {    
      if(c == '-')
      {
         isNegative = 1;
      }
      else
      {
         if(c == '0') numBuf[charsRead] = 0;
         if(c == '1') numBuf[charsRead] = 1;
         if(c == '2') numBuf[charsRead] = 2;
         if(c == '3') numBuf[charsRead] = 3;
         if(c == '4') numBuf[charsRead] = 4;
         if(c == '5') numBuf[charsRead] = 5;
         if(c == '6') numBuf[charsRead] = 6;
         if(c == '7') numBuf[charsRead] = 7;
         if(c == '8') numBuf[charsRead] = 8;
         if(c == '9') numBuf[charsRead] = 9;
         charsRead++;
      }
      
      i++;
      c = fil("triangle.txt",i);
   }
   
   if(charsRead <= 0)
   {
      readSuccess = 0;
      return 0;
   }else{
      readSuccess = 1;
   }
   
   num = 0;
   place = charsRead-1;
   for(j = 0; j < charsRead; j++)
   {
      num += numBuf[j] * 10^place;
      place--;
   }
   if( isNegative ) num *= -1;
   
   return num;
}

